name: CI Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on:
      group: dev-runner-grp
      labels: [self-hosted, Linux, ARM64]

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Read version from version.txt
      - name: Read version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      # Step 4: Replace placeholder in pom.xml
      - name: Update pom.xml version
        run: |
          sed -i "s|#{versionid}#|${{ env.VERSION }}|g" pom.xml
          echo "Updated pom.xml version to ${{ env.VERSION }}"

      # Step 5: Set dynamic JAVA_HOME, PATH, and other tool paths
      - name: Set environment variables for tools
        run: |
          # Detect JAVA_HOME dynamically
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
          export PATH=$JAVA_HOME/bin:$PATH

          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

          # Other tools
          echo "MAVEN_PATH=$(which mvn)" >> $GITHUB_ENV
          echo "DOCKER_PATH=$(which docker)" >> $GITHUB_ENV
          echo "NODE_PATH=$(which node)" >> $GITHUB_ENV
          echo "NPM_PATH=$(which npm)" >> $GITHUB_ENV

          # Show versions
          java -version
          javac -version
          mvn -v
          docker --version
          node -v
          npm -v

      # Step 6: Build with Maven
      - name: Build with Maven
        run: |
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
          export PATH=$JAVA_HOME/bin:$PATH
          mvn clean install -B

      # Step 7: Check build artifacts
      - name: Path Check
        run: |
          pwd
          ls -l target/

      # Step 8: Build the Docker image
      - name: Build the Docker image
        run: |
          docker buildx build --platform linux/arm64 -t hello-world-app:${{ env.VERSION }} .
